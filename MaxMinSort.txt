ORG 100

/ Load up the LoopCount. 
Load LoopCount

/ The outerloop is to run the main program several times
OuterLoop, Load LoopCount
Subt One
Store LoopCount
Skipcond 800
Jump EndSort

/ Main sorting program, starts with comparing Num1 and Num2
Load Num1
Store Temp
Load Num2
Subt Num1
Skipcond 800 
Jump Sort
Load Num1
Store Temp

/ We do the same for every pair of numbers
Load Num2
Store Num1
Load Temp
Store Num2
Sort, Load Num3
Subt Num2
Skipcond 800
Jump Sort2
Load Num2
Store Temp

Load Num3
Store Num2
Load Temp
Store Num3
Sort2, Load Num4
Subt Num3
Skipcond 800
Jump Sort3
Load Num3
Store Temp

Load Num4
Store Num3
Load Temp
Store Num4
Sort3, Load Num5
Subt Num4
Skipcond 800
Jump Sort4
Load Num4
Store Temp

Load Num5
Store Num4
Load Temp
Store Num5
Sort4, Load Num6
Subt Num5
Skipcond 800
Jump Sort5
Load Num5
Store Temp

Load Num6
Store Num5
Load Temp
Store Num6
Sort5, Load Num7
Subt Num6
Skipcond 800
Jump Sort6
Load Num6
Store Temp

Load Num7
Store Num6
Load Temp
Store Num7
Sort6, Load Num8
Subt Num7
Skipcond 800
Jump Sort7
Load Num7
Store Temp

Load Num8
Store Num7
Load Temp
Store Num8
Sort7, Load Num9
Subt Num8
Skipcond 800
Jump Sort8
Load Num8
Store Temp

Load Num9
Store Num8
Load Temp
Store Num9
Sort8, Load Num10
Subt Num9
Skipcond 800
Jump Sort9
Load Num9
Store Temp

Load Num10
Store Num9
Load Temp
Store Num10
Sort9, Load LoopCount
Jump OuterLoop

/ End of sorting process
EndSort, Halt


One, DEC 1
LoopCount, DEC 10

/Our Hex Variables
Num1, HEX 5
Num2, HEX 35
Num3, HEX 75
Num4, HEX 45
Num5, HEX 85
Num6, HEX 25
Num7, HEX 95
Num8, HEX 55
Num9, HEX 15
Num10, HEX 65
/Used for holding the swap numbers for comparison.
Temp, HEX 0
